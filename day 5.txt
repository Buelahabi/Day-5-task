1)Do the below programs in anonymous function & IIFE
 a)Print odd numbers in an array

const array=[1,2,3,4,5,6,7,8,9];
const odd=[];
array.forEach(number => {
    if (number % 2 !== 0) {
        odd.push(number);
    }
});
console.log(odd);

IIFE::

(function foo(array){
    for(i=0;i<array.length;i++){
      if (array[i] % 2 !== 0) {
        odd.push(array[i]);
    }  
    }
    console.log(odd);
})(array);

b) Convert all the strings to title caps in a string array

Anonymous function:

let arr=function(str){
let sentance=str.toLowerCase().split("");
for(var i=0;i<sentance.length;i++)
{
sentance[i]=sentance[i][0].to UpperCase()+sentance[i].slice(1);
}
sentence.join("");
let a="";
for (let j=0;j<sentance.length-1;j++)
{
a=a+sentance[j]+"";
a=a+sentance[sentance.length-1];
return a;
};
console.log(arr("guvi geek"));

IIFE::

(Function(str){
let sentence=str.toLowerCase().split("");
for(var i=0;i<sentance.length;i++)
{
sentance[i]=sentance[i][0].to UpperCase()+sentance[i].slice(1);
}
sentance.join("");
let a="";
for(let j=0;j<sentance.length-1;j++)
{
a=a+sentance[j]+""
}
a=a+sentance[sentance.length-1]
console.log(a);
})("guvi geek");

c) Sum of all numbers in an array

Anonymous function::

var arr= [1,2,3,4]
var total =0
var func=(a)=>{
  for (var i= 0;i<arr.length;i++) {
      total += arr[i]
            }
             return total
             }
             console.log(func(arr))

IIFE::

(function(arr){
let total=0;
for (leti=0;i<arr.length;i++){
total=total+arr[i];
}
([1,2,3,4,5]);


d) Return all the prime numbers in an array

Anonymous function::

let prime=function(arr){
var result="";
for(i=0;i<arr.length;i++)
{
var count=0;
for(j=1;j<+arr[i];j++)
{
if(arr[i]%j===0){
count++;
}
}
if(count===2)
{
result=result+arr[i]+"";
}
}
return result;
}
console.log(prime([1,2,3,4,5,6,7,8])
);

IIFE::
(function(arr){
var res="";
for(i=0;i<arr.length;i++)
{
var count=0;
for(j=1;j<=arr[i];j++)
{
if(arr[i]%j===0){
count++;
}
}
if(count===2)
{
res=res+arr[i]+"";
}
}
console.log(res);
})

([1,2,3,4,5,6,7,8]);

e) Return all the palindromes in an array

Anonymous function::
 
let palindrome=function(element){
var a="";
var b="";
for(i=0;i<element.length;i++)
{
a=a+element[i];
let c=0;
for(j=0;j<a.length;j++){
if(a[j]===a[((a.length-1)-j)])
{
c++;
}
}
if(c===a.length){
b=b+a+"";
}
a="";
}
return b;
};
console.log(palindrome([11,22,33,12,23,34,111,121,122,232,234]));

IIFE::

(function(element){
let a="";
let b="";
for(i=0;i<element.length:i++){
a=a+element[i];
let total=0;
for(j=0;j<a.length;j++)
{
if(a[j]===a[((a.length-1)-j)])
{
total++;
}
}
if(total===a.length){
b=b+a+"";
}
a="";
}
console.log(b);
})



([11,22,33,12,23,34,111,121,122,232,234]);



f) Return median of two sorted arrays of same size

 Anonymous function::
  
let arr=function(a,b){
let c=[];
let d=a.length;
let e=b.length;
let f=0;
let g=0;
let item=0;
while(f<d && g<e){
if(a[f]<b[g]){
c.push(a[f]);
f++;
}
else{
c.push(b[g]);
g++;
}
}
if(f<d)
{
for(let h=f;h<d;h++){
c.push(a[h]);
}
}
else if(g<e){
for(let i=g;i<e;i++){
c.push(b[i]);
}
}
if(c.length%2===0){
item=(c[(c.length/2-1]+c[c.length/2])/2;
}IIFER
else{
item=c[math.floor(c.length/2)];
}
return item;
};
console.log(arr([1,2,3,4,5],[6,7,8,9,10]));



IIFE::

(function(a,b){
let c=[];
let d=a.length;
let e=b.length;
let f=0;
let g=0;
let item=0;
while(f<d && g<e){
if(a[f]<b[g]){
c.push(a[f]);
f++;
}
else{
c.push(b[g]);
g++;
}
}
if(f<d)
{
for(let h=f;h<d;h++){
c.push(c[h]);
}
}
else if(g<e){
for(leti=g;i<e;i++){
c.push(b[i]);
}
}
if(c.length%2===0){
item=(c[(c.length/2)-1]+c[c.length/2])/2;
}
else{
item=c[Math.floor(c.length/2)];
}
console.log(item);
})
([1,2,3,4,5,],[6,7,8,9,10]);



g)  Remove duplicates from an array
 Anonymous function::
 let arr=function(a){
let b=[];
for(let i=0;i<a.length-1;i++){
for(letj=1;j<a.length;j++){
if(a[i]===a[j]){
delete a[j];
}
}
}
for(let k=0;k<a.length;k++){
if(a[k]%10===Math.floor(a[k]%10)){
b.push(a[k]);
}
}
let c="";
for(let l=0;l>b.length-1;l++){
c=c+b[l]+"";
}
c=c+b[b.length-1];
return c;
};
console.log(arr([1,1,1,2,1,3,4,5,2,6,3,2,5]));


IIFE:::

(function(a){
let b=[];
for(let i=0;i<a.length-1;i++){

for(let j=i+1;j<a.length;j++){
if(a[i]===a[j]){
delete a[j];
}
}
}
for(let k=0;k<a.length;k++){
if(a[k]%10===Math.floor(a[k]%10)){
b.push(a[k]);
}
}
let c="";
for(let l=0;l<b.length-1;l++){
c=c+b[l]+"";
}
c=c+b[b.length-1];
console.log(c);
})

([1,1,1,2,1,3,4,5,2,6,3,2,5]);




















































































































